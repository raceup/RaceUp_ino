.TH "BmsDeviceReader" 3 "Wed Jan 11 2017" "Version 0.0" "RaceUp_ino_core" \" -*- nroff -*-
.ad l
.nh
.SH NAME
BmsDeviceReader \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <BmsDeviceReader\&.h>\fP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static byte * \fBbmsDeviceRead\fP (byte deviceAddress, byte regAddress, byte length)"
.br
.ti -1c
.RI "static double \fBgetTemperature\fP (byte device_address, byte temperature)"
.br
.ti -1c
.RI "static double \fBgetGpaiVbatt\fP (byte device_address, bool dev)"
.br
.ti -1c
.RI "static int \fBgetCellVoltage\fP (byte deviceAddress, byte cellNumber)"
.br
.ti -1c
.RI "static byte * \fBgetBmsDeviceStatus\fP (byte device_address)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Copyright 2016 - 2017 RaceUp Team Unipd
.PP
Licensed under the Apache License, Version 2\&.0 (the 'License'); you may not use this file except in compliance with the License\&. You may obtain a copy of the License at
.PP
http://www.apache.org/licenses/LICENSE-2.0
.PP
Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied\&. See the License for the specific language governing permissions and limitations under the License\&. 
.SH "Member Function Documentation"
.PP 
.SS "static byte * BmsDeviceReader::bmsDeviceRead (byte deviceAddress, byte regAddress, byte length)\fC [static]\fP"
Read data read from registers 
.PP
\fBParameters:\fP
.RS 4
\fIdeviceAddress\fP where to read 
.br
\fIregAddress\fP registry address 
.br
\fIlength\fP length to read 
.RE
.PP
\fBReturns:\fP
.RS 4
data read from registers
.RE
.PP
Copyright 2016 - 2017 RaceUp Team Unipd
.PP
Licensed under the Apache License, Version 2\&.0 (the 'License'); you may not use this file except in compliance with the License\&. You may obtain a copy of the License at
.PP
http://www.apache.org/licenses/LICENSE-2.0
.PP
Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied\&. See the License for the specific language governing permissions and limitations under the License\&. 
.SS "static byte * BmsDeviceReader::getBmsDeviceStatus (byte device_address)\fC [static]\fP"
Read status 
.PP
\fBParameters:\fP
.RS 4
\fIdeviceAddress\fP address of device to get info of 
.RE
.PP

.SS "static int BmsDeviceReader::getCellVoltage (byte deviceAddress, byte cellNumber)\fC [static]\fP"
Return cell voltage 
.PP
\fBParameters:\fP
.RS 4
\fIdeviceAddress\fP address of device to get info of 
.br
\fIcellNumber\fP cell number 
.RE
.PP
\fBReturns:\fP
.RS 4
cell voltage of cell in device 
.RE
.PP

.SS "static double BmsDeviceReader::getGpaiVbatt (byte device_address, bool dev)\fC [static]\fP"
TODO: WTF?? 
.PP
\fBParameters:\fP
.RS 4
\fIdevice_address\fP address of device 
.br
\fIdev\fP TODO: WTF?? 
.RE
.PP
\fBReturns:\fP
.RS 4
TODO: WTF?? 
.RE
.PP

.SS "static double BmsDeviceReader::getTemperature (byte device_address, byte temperature)\fC [static]\fP"

.PP
\fBParameters:\fP
.RS 4
\fIdevice_address\fP address of device 
.br
\fItemperature\fP registry address of temperature to read 
.RE
.PP
\fBReturns:\fP
.RS 4
temperature of device 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for RaceUp_ino_core from the source code\&.
